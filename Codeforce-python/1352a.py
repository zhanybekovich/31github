'''

Положительное целое число называется круглым, если оно имеет вид d00...0. Иными словами, положительное целое число является круглым, если все его цифры, кроме самой левой (старшей), равны нулю. В частности, все числа от 1
 до 9
 (включительно) являются круглыми.

Например, следующие числа являются круглыми: 4000
, 1
, 9
, 800
, 90
. Например, следующие числа не являются круглыми: 110
, 707
, 222
, 1001
.

Вам задано целое положительное число n
 (1≤n≤104
). Представьте число n
 как сумму круглых чисел, используя минимальное количество слагаемых. Иными словами, вам надо разложить заданное число n
 в сумму наименьшего количества слагаемых, каждое из которых является круглым числом.

Входные данные
В первой строке записано целое число t
 (1≤t≤104
) — количество наборов входных данных в тесте. Далее следуют t
 наборов входных данных.

Каждый набор представляет собой строку, в которой записано целое число n
 (1≤n≤104
).

Выходные данные
Выведите t
 ответов на наборы входных данных. Каждый ответ должен начинаться с целого числа k
 — минимального количества слагаемых. Далее должны следовать k
 слагаемых, каждое из которых является круглым числом, а их сумма равна n
. Слагаемые можно выводить в любом порядке. Если ответов несколько, то выведите любой из них.

Пример
входные данныеСкопировать
5
5009
7
9876
10000
10
выходные данныеСкопировать
2
5000 9
1
7
4
800 70 6 9000
1
10000
1
10

'''
import math

t = int(input())

numbers = []

for _ in range(t):
    n = int(input().strip())
    numbers.append(n)


def is_round(n):
    if 1 <= n <= 9:
        return True
    else:
        s = list(int(i) for i in str(n)[1:])
        if sum(s) == 0:
            return True
        else:
            return False


for number in numbers:
    if is_round(number):
        print(1)
        print(number)
    else:
        power = int(math.log10(number))

        i = power
        k = 0
        s = ''

        while i >= 0:
            digit = int(str(number)[power - i])

            if digit == 0:
                i -= 1
                continue
            else:
                t = pow(10, i) * digit
                s += str(t) + " "

            k += 1
            i -= 1

        print(k)
        print(s)
