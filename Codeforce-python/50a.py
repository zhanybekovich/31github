'''
Дана прямоугольная клеточная доска размера M × N клеток. Также дано неограниченное количество стандартных доминошек размера 2 × 1 клетку. Доминошки можно поворачивать. Требуется уложить как можно больше доминошек на доску так, чтобы соблюдались следующие условия:

1. Каждая доминошка полностью покрывает две клетки доски.

2. Никакие две доминошки не перекрываются.

3. Каждая доминошка полностью лежит внутри доски. Касание краев доски допускается.

Найдите максимальное количество доминошек, которое можно уложить с данными ограничениями.

Входные данные
В единственной строке записано два целых числа M и N — размеры доски в клетках (1 ≤ M ≤ N ≤ 16).

Выходные данные
Выведите одно число — максимальное количество доминошек, которое можно уложить.

Примеры
входные данныеСкопировать
2 4
выходные данныеСкопировать
4

'''

'''
Давайте разберемся с этой задачей.

Обозначим размеры доски как M и N, где M - количество строк, N - количество столбцов. Доминошки размера 2 × 1, и каждая доминошка занимает две клетки доски.

Если M и N оба четные, то максимальное количество доминошек, которое можно уложить, равно (M * N) / 2. Это происходит потому, что каждая доминошка занимает две клетки, и если общее количество клеток четное, то можно их полностью разделить на доминошки без остатка.

Если M или N нечетные, то одну клетку оставим незанятой. Таким образом, максимальное количество доминошек будет равно (M * N - 1) / 2.
'''

M, N = map(int, input().split())

# Проверка на четность M и N
if M % 2 == 0 or N % 2 == 0:
    # Оба четные или оба нечетные
    result = M * N // 2
else:
    # Одно из чисел нечетное
    result = (M * N - 1) // 2

print(result)
